install.packages("timelineS")
library(timelineS)
On.NAP <- data.frame()
date <- c(1994,
2004,
2005,
2010,
2011,
2014,
2016,
2017)
des<- c("Onondaga Lake sediments added to USEPA Superfund National Priorities List",
"Metropolitan Wastewater Treatment Plant tertiary treatment improvements",
"Dredging, capping, oxygenation, and monitored natural recovery decided as action steps of 'Onondaga Lake Remedy",
"Chemical limnology and hydrological monitoring and modeling completed; nitrate addition deemed more appropriate than oxygenation",
"3-year nitrate addition pilot project",
"Dredging completed",
"Capping completed",
"Habitat restoration completed")
On.NAP <- data.frame(date,des)
View(On.NAP)
# Make timeline
timelineS(On.NAP, main = "Series of Events Affecting NAP", label.direction = "up", label.position = 3, line.color = "black",
label.color = "black", point.color = "black")
str(On.NAP)
On.NAP$date <- as.Date(as.character(On.NAP$date))
str(On.NAP)
On.NAP$des <- as.character(On.NAP$des)
# Make timeline
timelineS(On.NAP, main = "Series of Events Affecting NAP", label.direction = "up", label.position = 3, line.color = "black",
label.color = "black", point.color = "black")
On.NAP$date <-as.Date(On.NAP$date, c("%Y"))
On.NAP$date <-as.Date(On.NAP$date, "%Y")
On.NAP$date <-as.Date(as.character(On.NAP$date), "%Y")
str(On.NAP)
# Make timeline
timelineS(On.NAP, main = "Series of Events Affecting NAP", label.direction = "up", label.position = 3, line.color = "black",
label.color = "black", point.color = "black")
On.NAP$date <-as.numeric(as.character(On.NAP$date))
# Create dataframe with important Onondaga/Nitrate Addition events
date <- c(1994,
2004,
2005,
2010,
2011,
2014,
2016,
2017)
des<- c("Onondaga Lake sediments added to USEPA Superfund National Priorities List",
"Metropolitan Wastewater Treatment Plant tertiary treatment improvements",
"Dredging, capping, oxygenation, and monitored natural recovery decided as action steps of 'Onondaga Lake Remedy",
"Chemical limnology and hydrological monitoring and modeling completed; nitrate addition deemed more appropriate than oxygenation",
"3-year nitrate addition pilot project",
"Dredging completed",
"Capping completed",
"Habitat restoration completed")
On.NAP <- data.frame(date,des)
On.NAP$des <- as.character(On.NAP$des)
On.NAP$date <-as.numeric(as.character(On.NAP$date))
# Make timeline
timelineS(On.NAP, main = "Series of Events Affecting NAP", label.direction = "up", label.position = 3, line.color = "black",
label.color = "black", point.color = "black")
install.packages("vistime")
library(vistime)
# Make timeline
vistime(On.NAP)
# Create dataframe with important Onondaga/Nitrate Addition events
start <- c(1994,
2004,
2005,
2010,
2011,
2014,
2016,
2017)
end <-c(
)
des<- c("Onondaga Lake sediments added to USEPA Superfund National Priorities List",
"Metropolitan Wastewater Treatment Plant tertiary treatment improvements",
"Dredging, capping, oxygenation, and monitored natural recovery decided as action steps of 'Onondaga Lake Remedy",
"Chemical limnology and hydrological monitoring and modeling completed; nitrate addition deemed more appropriate than oxygenation",
"3-year nitrate addition pilot project",
"Dredging completed",
"Capping completed",
"Habitat restoration completed")
On.NAP <- data.frame(start,end,des)
end <-c("","","","","","","",""
)
des<- c("Onondaga Lake sediments added to USEPA Superfund National Priorities List",
"Metropolitan Wastewater Treatment Plant tertiary treatment improvements",
"Dredging, capping, oxygenation, and monitored natural recovery decided as action steps of 'Onondaga Lake Remedy",
"Chemical limnology and hydrological monitoring and modeling completed; nitrate addition deemed more appropriate than oxygenation",
"3-year nitrate addition pilot project",
"Dredging completed",
"Capping completed",
"Habitat restoration completed")
On.NAP <- data.frame(start,end,des)
# Make timeline
vistime(On.NAP)
On.NAP$des <- as.character(On.NAP$des)
On.NAP$start <-as.character(On.NAP$start)
str(On.NAP)
On.NAP$end <-as.character(On.NAP$end)
# Make timeline
vistime(On.NAP)
# Make timeline
vistime(On.NAP,start = "start", end = "end", events = "des")
On.NAP$start <-as.POSIXct(On.NAP$start)
On.NAP$end <-as.POSIXct(On.NAP$end)
citation()
citation(package = "MASS")
names<-as.data.frame(c("Adam","Foster","Jen","Rhianne","Lauren"))
names(names)<-"NAME"
sample(names$NAME,2)
sample(names$NAME,2)
sample(names$NAME,2)
sample(names$NAME,2)
sample(names$NAME,2)
sample(names$NAME,2)
sample(names$NAME,2)
# Read in csv files of each dataset (a. Onondaga Lake buoy, b. 3 Rivers buoy data, c. Lake Ontario buoys data, d. Oneida Lake)----
b.1 <-read.csv('./CSV_files/OswegoR.csv')
dirname(rstudioapi::getActiveDocumentContext()$path
)
my_packages <- c("lubridate", "plyr", "openxlsx", "dplyr","ggpubr",  "tidyr", "shiny","ggplot2")
lapply(my_packages, require, character.only = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Read in csv files of each dataset (a. Onondaga Lake buoy, b. 3 Rivers buoy data, c. Lake Ontario buoys data, d. Oneida Lake)----
b.1 <-read.csv('./CSV_files/OswegoR.csv')
b <- do.call(rbind,
lapply(list.files(path = "./CSV_files/3Rivers"), read.csv))
b <- do.call(rbind,
lapply(list.files(path = "./CSV_files/3Rivers"), read.csv))
install.packages(vroom)
filenames <- list.files(path = './CSV_files/3Rivers', pattern = '*', full.names = TRUE)
b <- ldply(filenames, read.csv)
str(b)
head(b$time,10)
b$time <- as.POSIXct(b$time, format = "%H:%M")
head(b$time,10)
b <- ldply(filenames, read.csv)
b$time <- as.POSIXct(strptime(b$time), format = "%H:%M")
b$time <- as.POSIXct(strptime(b$time "%H:%M"), format = "%H:%M")
b$time <- as.POSIXct(strptime(b$time, "%H:%M"), format = "%H:%M")
head(b$time,10)
b$date <- as.Date(b$date,format = "%m/%d/%Y")
min(b$date)
b$time <- as.POSIXct(strptime(b$time, "%H:%M"), origin = "2000-08-01", format = "%H:%M")
head(b$time,10)
b <- ldply(filenames, read.csv)
b$system.code <- as.character(b$system.code)
b$station.code <- as.character(b$station.code)
b$date <- as.Date(b$date,format = "%m/%d/%Y")
b$time <- as.POSIXct(strptime(b$time, "%H:%M"), origin = "2000-08-01", format = "%H:%M")
head(b$time,10)
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%Y-%m-%d %H:%M")
head(b$datetime,10)
b <- ldply(filenames, read.csv)
b$system.code <- as.character(b$system.code)
b$station.code <- as.character(b$station.code)
b$date <- as.Date(b$date,format = "%m/%d/%Y")
#b$time <- as.POSIXct(strptime(b$time, "%H:%M"), origin = "2000-08-01", format = "%H:%M")
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%Y-%m-%d %H:%M")
head(b$datetime,10)
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%m/%d/%Y %H:%M")
head(b$datetime,10)
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%Y-%m-%d %H:%M")
head(b$datetime,10)
str(b$datetime)
timeperiod <- cut(hour(b$datetime), breaks = c(21, 3, 9, 15), include.lowest = TRUE)
timeperiod
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(21, 3, 9, 15), include.lowest = TRUE)
View(b)
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(21, 3, 9, 15, 21), include.lowest = TRUE)
b <- ldply(filenames, read.csv)
b$system.code <- as.character(b$system.code)
b$station.code <- as.character(b$station.code)
b$date <- as.Date(b$date,format = "%m/%d/%Y")
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%Y-%m-%d %H:%M") # Time cannot exist without date
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(21, 3, 9, 15, 21), include.lowest = TRUE)
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(21, 3, 9, 15), include.lowest = TRUE)
b <- ldply(filenames, read.csv)
b$system.code <- as.character(b$system.code)
b$station.code <- as.character(b$station.code)
b$date <- as.Date(b$date,format = "%m/%d/%Y")
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%Y-%m-%d %H:%M") # Time cannot exist without date
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(21, 3, 9, 15), include.lowest = FALSE)
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(3, 9, 15, 21), include.lowest = TRUE)
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(0, 6, 12, 18, 24), include.lowest = TRUE)
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(0, 3, 6, 9, 12, 15, 18, 21, 24), include.lowest = TRUE)
levels(b$timeperiod)
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else {
function(y)
if(y == "(6,9]"  | y == "(9,12]" )
2
else {
function(y)
if(y == "(12,15]"  | y == "(15,18]" )
3
else {
function(y)
if(y == "(18,21]"  | y == "(21,24]" )
4
}
}
}))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else (
function(y)
if(y == "(6,9]"  | y == "(9,12]" )
2
else (
function(y)
if(y == "(12,15]"  | y == "(15,18]" )
3
else (
function(y)
if(y == "(18,21]"  | y == "(21,24]" )
4
)
)
)))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else (
function(x)
if(x == "(6,9]"  | x == "(9,12]" )
2
else (
function(z)
if(z == "(12,15]"  | z == "(15,18]" )
3
else (
function(a)
if(a == "(18,21]"  | a == "(21,24]" )
4)
)
)
))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else if(
function(x)
if(x == "(6,9]"  | x == "(9,12]" )
2)
else if(
function(z)
if(z == "(12,15]"  | z == "(15,18]" )
3 )
else if(
function(a)
if(a == "(18,21]"  | a == "(21,24]" )
4))))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else if(
function(x)
if(x == "(6,9]"  | x == "(9,12]" )
2
else if(
function(z)
if(z == "(12,15]"  | z == "(15,18]" )
3
else if(
function(a)
if(a == "(18,21]"  | a == "(21,24]" )
4)))))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else if(
function(x)
if(x == "(6,9]"  | x == "(9,12]" )
2
else if(
function(z)
if(z == "(12,15]"  | z == "(15,18]" )
3
else if(
function(a)
if(a == "(18,21]"  | a == "(21,24]" )
4)
))))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else if(
if(x == "(6,9]"  | x == "(9,12]" )
2
else if(
function(z)
if(z == "(12,15]"  | z == "(15,18]" )
3
else if(
function(a)
if(a == "(18,21]"  | a == "(21,24]" )
4))
# D. Oneida Lake----
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else if(
function(x)
if(x == "(6,9]"  | x == "(9,12]" )
2
else if(
function(z)
if(z == "(12,15]"  | z == "(15,18]" )
3
else if(
function(a)
if(a == "(18,21]"  | a == "(21,24]" )
4)))))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else if(
(y == "(6,9]"  | y == "(9,12]" )
2
else if(
if(y == "(12,15]"  | y == "(15,18]" )
3
else if(
if(y == "(18,21]"  | y == "(21,24]" )
4)))))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else
function(y)
if(y == "(6,9]"  | y == "(9,12]" )
2
else
function(y)
if(y == "(12,15]"  | y == "(15,18]" )
3
else 4))
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(3,6]" )
1
else
if(y == "(6,9]"  | y == "(9,12]")
2
else
if(y == "(12,15]"  | y == "(15,18]" )
3
else 4))
levels(b$timeperiod)
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(21,24]" )
1
else
if(y == "(3,6]"  | y == "(6,9]")
2
else
if(y == "(9,12]"  | y == "(12,15]" )
3
else 4))
my_packages <- c("lubridate", "plyr", "openxlsx", "dplyr","ggpubr",  "tidyr", "shiny","ggplot2")
lapply(my_packages, require, character.only = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Read in csv files of each dataset (a. Onondaga Lake buoy, b. 3 Rivers buoy data, c. Lake Ontario buoys data, d. Oneida Lake)----
# A. Onondaga Lake data----
# B. 3 Rivers data, read all files into 1 dataset----
filenames <- list.files(path = './CSV_files/3Rivers', pattern = '*', full.names = TRUE)
b <- ldply(filenames, read.csv)
# C. Lake Ontario data----
# D. Oneida Lake data----
# Manipulated data so that it meets requirements for visualizations----
# A. Onondaga Lake----
# B. 3 Rivers----
b$system.code <- as.character(b$system.code)
b$station.code <- as.character(b$station.code)
b$date <- as.Date(b$date,format = "%m/%d/%Y")
b$datetime <- as.POSIXct(paste(b$date, b$time), format = "%Y-%m-%d %H:%M") # Time cannot exist without date
# Adding time period factor based on collection time (1. 21:00-3:00, 2.  3:01-9:00, 3. 9:01-15:00, 4. 15:01-21:00)
b$timeperiod <- cut(hour(b$datetime), breaks = c(0, 3, 6, 9, 12, 15, 18, 21, 24), include.lowest = TRUE)
b <- b %>%
mutate(tp = lapply(timeperiod,
function(y)
if(y == "[0,3]"  | y == "(21,24]" )
1
else
if(y == "(3,6]"  | y == "(6,9]")
2
else
if(y == "(9,12]"  | y == "(12,15]" )
3
else 4))
str(tp)
str(b$tp)
b$tp <- as.factor(as.character(b$tp))
str(b$tp)
str(b$station.code)
b$station.code <- as.factor(as.character(b$station.code))
str(b$station.code)
levels(b$station.code)
buoy.coord <-as.data.frame()
buoy.coord <-as.data.frame(coord)
buoy.coord <-as.data.frame(b$station.code)
View(buoy.coord)
buoy.coord <-as.data.frame(unique(b$station.code))
View(buoy.coord)
buoy.coord$coord.lat <-c(43.440481,0)
buoy.coord$coord.long <- c(-76.490645,0)
View(buoy.coord)
# Factor stations and add coordinates
b$station.code <- as.factor(as.character(b$station.code))
buoy.coord <-as.data.frame(unique(b$station.code))
names(buoy.coord) <-c("station.code")
buoy.coord$lat <-c(43.440481,43.44995,43.205123,43.231178,43.193388,43.139376,43.147516,43.103883,43.100510,43.108055)
buoy.coord$long <- c(-76.490645,-76.50349,-76.269799,-76.309791,-76.279911,-76.238025,-76.314771,-76.445725,-76.499537,-76.475456)
str(b)
load("C:/Users/Monica/AppData/Local/Temp/assessed_profs.rdata")
unique(b$ORP..mV.)
length(unique(b$ORP..mV.))
str(b)
# Remove time_id and data_id
b <- b %>% select(!c(time_id,data_id))
View(b)
unique(b[c("system.code","station.code")])
buoy.coord <-as.data.frame(unique(b$station.code))
names(buoy.coord) <-c("station.code")
buoy.coord$lat <-c(43.240093,43.44995,43.205123,43.231178,43.193388,43.139376,43.147516,43.103883,43.100510,43.108055)
buoy.coord$long <- c(-76.147568,-76.50349,-76.269799,-76.309791,-76.279911,-76.238025,-76.314771,-76.445725,-76.499537,-76.475456)
